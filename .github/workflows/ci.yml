name: 🚀 CI/CD Pipeline - DevWeb31 Architecture

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  # 🔍 Qualité du Code
  code-quality:
    name: 🔍 Qualité du Code
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Installation des dépendances
        run: npm ci

      - name: 🔍 Linting ESLint
        run: npm run lint

      - name: 🎨 Formatage Prettier
        run: npm run format:check

      - name: 🔍 Vérification TypeScript
        run: npm run type-check

  # 🧪 Tests
  test:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Installation des dépendances
        run: npm ci

      - name: 🧪 Exécution des tests
        run: npm run test:coverage

      - name: 📊 Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # 🏗️ Build
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: [code-quality, test]
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Installation des dépendances
        run: npm ci

      - name: 🏗️ Build de production
        run: npm run build

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  # 🛡️ Sécurité
  security:
    name: 🛡️ Sécurité
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Installation des dépendances
        run: npm ci

      - name: 🔒 Audit de sécurité npm
        run: npm audit --audit-level=moderate

      - name: 🕵️ Scan des secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ⚡ Performance
  performance:
    name: ⚡ Performance
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Installation des dépendances
        run: npm ci

      - name: 🏗️ Build pour analyse
        run: npm run build

      - name: 📊 Analyse de bundle
        run: npm run analyze

  # 🚀 Déploiement
  deploy:
    name: 🚀 Déploiement
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Installation des dépendances
        run: npm ci

      - name: 🏗️ Build de production
        run: npm run build

      - name: 🚀 Déploiement Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  # 📱 Notifications
  notify:
    name: 📱 Notifications
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()
    steps:
      - name: 📧 Notification Slack (optionnel)
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

      - name: 📊 Résumé du déploiement
        if: always()
        run: |
          echo "🚀 Déploiement terminé pour ${{ github.repository }}"
          echo "📅 Date: $(date)"
          echo "🔗 Commit: ${{ github.sha }}"
          echo "👤 Auteur: ${{ github.actor }}"
