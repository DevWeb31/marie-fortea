#!/bin/bash

# Script de restauration rapide de la base de donn√©es - DevWeb31 Architecture
# Usage: ./scripts/restore-database.sh [dev|prod]

set -e

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
PROJECT_NAME="marie-fortea"
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

# Fonctions utilitaires
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rification des arguments
ENVIRONMENT=${1:-dev}

if [[ "$ENVIRONMENT" != "dev" && "$ENVIRONMENT" != "prod" ]]; then
    log_error "Environnement invalide. Utilisez 'dev' ou 'prod'"
    exit 1
fi

log_info "Restauration de la base de donn√©es pour l'environnement: $ENVIRONMENT"

# V√©rification des pr√©requis
check_prerequisites() {
    log_info "V√©rification des pr√©requis..."
    
    # Supabase CLI
    if ! command -v supabase &> /dev/null; then
        log_error "Supabase CLI n'est pas install√©"
        log_info "Installez-le avec: npm install -g supabase"
        exit 1
    fi
    
    SUPABASE_VERSION=$(supabase --version)
    log_success "Supabase CLI d√©tect√©: $SUPABASE_VERSION"
}

# Restauration de la base de donn√©es
restore_database() {
    log_info "Restauration de la base de donn√©es..."
    
    cd "$PROJECT_ROOT"
    
    if [[ "$ENVIRONMENT" == "dev" ]]; then
        log_info "Restauration de l'environnement de d√©veloppement..."
        
        # V√©rifier si Supabase local est en cours
        if ! supabase status &> /dev/null; then
            log_warning "Supabase local n'est pas d√©marr√©"
            log_info "D√©marrage de Supabase local..."
            supabase start
        fi
        
        # Appliquer la migration
        log_info "Application de la migration initiale..."
        supabase db reset
        
    else
        log_info "Restauration de l'environnement de production..."
        
        # V√©rifier la configuration de production
        if [[ -z "$SUPABASE_ACCESS_TOKEN" ]]; then
            log_error "SUPABASE_ACCESS_TOKEN non d√©fini"
            log_info "Connectez-vous avec: supabase login"
            exit 1
        fi
        
        # Appliquer la migration en production
        log_info "Application de la migration en production..."
        supabase db push --project-ref $(grep -o 'https://[^.]*\.supabase\.co' .env | cut -d'/' -f3)
    fi
    
    log_success "Base de donn√©es restaur√©e avec succ√®s !"
}

# V√©rification de la restauration
verify_restoration() {
    log_info "V√©rification de la restauration..."
    
    if [[ "$ENVIRONMENT" == "dev" ]]; then
        # V√©rifier les tables en local
        log_info "V√©rification des tables cr√©√©es..."
        supabase db diff --schema public
    else
        log_info "V√©rification des tables en production..."
        # Ici vous pouvez ajouter une v√©rification via l'API Supabase
    fi
}

# Main
main() {
    log_info "üöÄ D√©but de la restauration de la base de donn√©es..."
    
    check_prerequisites
    restore_database
    verify_restoration
    
    log_success "üéâ Restauration termin√©e avec succ√®s !"
    log_info "Vos tables sont maintenant disponibles :"
    log_info "  - profiles (utilisateurs)"
    log_info "  - sessions (sessions utilisateurs)"
    log_info "  - bookings (r√©servations)"
}

# Ex√©cution
main "$@"
